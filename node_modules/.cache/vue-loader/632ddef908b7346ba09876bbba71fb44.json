{"remainingRequest":"/Users/daisuke/Desktop/vue_ver2/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daisuke/Desktop/vue_ver2/my-project/src/pages/django_task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daisuke/Desktop/vue_ver2/my-project/src/pages/django_task.vue","mtime":1626272652106},{"path":"/Users/daisuke/Desktop/vue_ver2/my-project/node_modules/cache-loader/dist/cjs.js","mtime":1624797707346},{"path":"/Users/daisuke/Desktop/vue_ver2/my-project/node_modules/babel-loader/lib/index.js","mtime":1624797707383},{"path":"/Users/daisuke/Desktop/vue_ver2/my-project/node_modules/cache-loader/dist/cjs.js","mtime":1624797707346},{"path":"/Users/daisuke/Desktop/vue_ver2/my-project/node_modules/vue-loader/lib/index.js","mtime":1624797716038}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgYXhpb3MgZnJvbSAnLi4vYXhpb3MtZm9yLWF1dGguanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gKCkgewogIHJldHVybiB7CiAgICAvL3Jlc3BvbnNl44Gu5Y+X44GR5Y+W44KK5Y+j44KS55So5oSPCiAgICBpbmZvOiBbXSwKICAgIHRpdGxlOiAiIgogIH0KfSwKICBjb21wdXRlZDogewogICAgaWRUb2tlbigpIHsKICAgICAgLy90b2tlbuOCkui/lOOBmQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5pZFRva2VuOwogICAgfSwKCiAgfSwKICBtZXRob2RzOiB7CiAgICAvL2dldOODoeOCveODg+ODieOBp+OCv+OCueOCr+OCkuWPluW+lwogICAgdG9rZW5fbG9nKCkgewogICAgICBjb25zb2xlLmxvZyhgJHt0aGlzLmlkVG9rZW59YCkKICAgICAgICBheGlvcy5nZXQoJy9hcGkvdGFza3MvJyx7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBUb2tlbiAke3RoaXMuaWRUb2tlbn1gCiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgCiAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzcG9uc2UpOyAgICAgICAKICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhWycxJ10uaWQpCiAgICAgICAgICAgIC8vZG9jdW1lbnQud3JpdGUoJzxwPicrIHJlc3BvbnNlLmRhdGEgKyAnPC9wPicpOwogICAgICAgICAgICB0aGlzLmluZm8gPSByZXNwb25zZS5kYXRhCiAgICAgICAgICAgIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dyYXAnKS5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcscmVzcG9uc2UuZGF0YVsnMSddLnRpdGxlKTsKCiAgICAgICAgfSk7CiAgICB9LAogICAgbmV3X3Rhc2soKXsKICAgIGNvbnN0IGRhdGEgPSB7CiAgICAgIHRpdGxlOnRoaXMudGl0bGUKICAgIH0KICAgIGNvbnNvbGUubG9nKGAke3RoaXMuaWRUb2tlbn1gKQogICAgY29uc29sZS5sb2codGhpcy50aXRsZSkKICAgIGF4aW9zLnBvc3QoCiAgICAgICIvYXBpL3Rhc2tzLyIsIGRhdGEsCiAgICAgIHsKICAgIGhlYWRlcnM6IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICdBdXRob3JpemF0aW9uJzogYFRva2VuICR7dGhpcy5pZFRva2VufWAKICAgICAgfQogICAgfQogICAgKQogICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICB9KQogICAgLmNhdGNoKGVycm9yID0+ewogICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICB9KQogICAgdGhpcy50aXRsZSA9ICIiOwogIH0sCgoKICBkZWxldGVfdGFzayhpZCl7CiAgICBheGlvcy5kZWxldGUoCiAgICAgIGAvYXBpL3Rhc2tzLyR7aWR9YCwKICAgICAgewogICAgICAgIGhlYWRlcnM6CiAgICB7CiAgICAgJ0F1dGhvcml6YXRpb24nOiBgVG9rZW4gJHt0aGlzLmlkVG9rZW59YAogICAgfQogICAgfSkKICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgfSkKICAgIC5jYXRjaChlcnJvciA9PnsKICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICBhbGVydChlcnJvciArICdcbuaXouOBq+WtmOWcqOOBl+OBquOBhOOCv+OCueOCr+OBp+OBmScpCgogICAgfSkKICAgIHRoaXMudGl0bGUgPSAiIjsKICB9LAoKCiB9Cn0K"},{"version":3,"sources":["django_task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA","file":"django_task.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  \n  <div class=\"container_t\">\n    <h2>タスク管理ページです</h2>\n    <div class=\"task_get\">\n    <!--<div id ='wrap'> <p>トークン表示</p></div>-->\n      <button type=\"button\" @click=\"token_log()\">確認する</button>\n    </div>\n    <!--<input type =\"text\" v-model=\"this.info\">-->\n    <!--タスク表示-->\n    <div class=\"ul-align-center\">\n    <ul>\n      <li v-for=\"item in info\" :key=\"item.title\" class=\"task_list\">\n        タスク名:{{item.title}} <button type=\"button\" class=\"button\" @click=\"delete_task(item.id)\">削除</button>\n      </li>  \n    </ul>\n    \n    <br>\n    <!--タスク作成-->\n    <h3>タスク作成</h3>\n      <label for=\"title\">タスク名:</label>\n      <input type=\"text\" id=\"task\" v-model=\"title\">\n      <button type=\"button\" @click=\"new_task()\">作成する</button>\n    </div>\n\n    </div>\n</template>\n\n<script>\n\nimport axios from '../axios-for-auth.js';\nexport default {\n  data: function () {\n  return {\n    //responseの受け取り口を用意\n    info: [],\n    title: \"\"\n  }\n},\n  computed: {\n    idToken() {\n      //tokenを返す\n      return this.$store.getters.idToken;\n    },\n\n  },\n  methods: {\n    //getメソッドでタスクを取得\n    token_log() {\n      console.log(`${this.idToken}`)\n        axios.get('/api/tasks/',{\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${this.idToken}`\n            }\n        })\n        .then((response) => {\n          \n            //console.log(response);       \n            //console.log(response.data['1'].id)\n            //document.write('<p>'+ response.data + '</p>');\n            this.info = response.data\n            //document.getElementById('wrap').insertAdjacentHTML('beforeend',response.data['1'].title);\n\n        });\n    },\n    new_task(){\n    const data = {\n      title:this.title\n    }\n    console.log(`${this.idToken}`)\n    console.log(this.title)\n    axios.post(\n      \"/api/tasks/\", data,\n      {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${this.idToken}`\n      }\n    }\n    )\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error =>{\n      console.log(error);\n    })\n    this.title = \"\";\n  },\n\n\n  delete_task(id){\n    axios.delete(\n      `/api/tasks/${id}`,\n      {\n        headers:\n    {\n     'Authorization': `Token ${this.idToken}`\n    }\n    })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error =>{\n      console.log(error);\n      alert(error + '\\n既に存在しないタスクです')\n\n    })\n    this.title = \"\";\n  },\n\n\n }\n}\n</script>\n\n"]}]}